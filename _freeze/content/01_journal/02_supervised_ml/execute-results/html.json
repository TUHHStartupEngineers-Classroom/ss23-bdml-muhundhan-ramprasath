{
  "hash": "c894c810cbb6b196650ae61fc92723c2",
  "result": {
    "markdown": "---\ntitle: \"Supervised ML\"\nauthor: \"Ramprasath Muhundhan\"\n---\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-1_b43a3e556f36a1f99a522000d45554ff'}\n\n```{.r .cell-code}\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: dplyr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following objects are masked from 'package:stats':\n#> \n#>     filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following objects are masked from 'package:base':\n#> \n#>     intersect, setdiff, setequal, union\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'recipes'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ forcats   1.0.0     ✔ readr     2.1.4\n#> ✔ ggplot2   3.4.2     ✔ stringr   1.5.0\n#> ✔ lubridate 1.9.2     ✔ tibble    3.2.1\n#> ✔ purrr     1.0.1     ✔ tidyr     1.3.0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter()  masks stats::filter()\n#> ✖ stringr::fixed() masks recipes::fixed()\n#> ✖ dplyr::lag()     masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(rsample)\nlibrary(workflows)\nlibrary(parsnip)\n```\n:::\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-2_81f1415ae0de6c66b20873cc5c2b89b1'}\n\n```{.r .cell-code}\nbike_features_tbl <- readRDS(\"C:/Users/rampr/OneDrive/Documents/GitHub/ss23-bdml-muhundhan-ramprasath/bike_features_tbl.rds\") %>%\nselect(model, price, frame_material, weight)\n```\n:::\n\n\n\n#creating recipe\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-3_50e66452e11e6425b5bb42e8786e799b'}\n\n```{.r .cell-code}\nbike_recipe <- recipe(price ~ weight, data = bike_features_tbl) %>%\n  step_dummy(all_nominal(), -all_outcomes(), one_hot = TRUE)\n\nbike_baked <- prep(bike_recipe) %>%\nbake(new_data = bike_features_tbl) %>%\nmutate(model = bike_features_tbl$model)\n```\n:::\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-4_5f13dcded676a8eaf91c145c64197c30'}\n\n```{.r .cell-code}\nggplot(bike_baked, aes(x = price, y = weight)) +\n  geom_point() +\n  labs(title = \"Scatter Plot\", x = \"Price\", y = \"Weight\")\n```\n\n::: {.cell-output-display}\n![](02_supervised_ml_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-5_2bb3a0194d46fc758e1ce0e74e42bb38'}\n\n```{.r .cell-code}\nset.seed(1113)\nsplit_obj <- initial_split(bike_baked, prop = 0.80)\n\ntrain_tbl <- training(split_obj)\ntest_tbl <- testing(split_obj)\n```\n:::\n\n\n\n#linear model\n\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-6_bd01dc34c6ddc466e24ac7042d6230f9'}\n\n```{.r .cell-code}\nlinear_model <- linear_reg(mode = \"regression\")\nworkflow_obj <- workflow(bike_recipe, linear_model) %>%\nfit(data = train_tbl)\n\nlinear_prediction <-  predict(workflow_obj, new_data = test_tbl)\n\nlinear_comparison <- linear_prediction %>%\n  mutate(weight = test_tbl$weight) %>%\n  mutate(correct_price = test_tbl$price)\n```\n:::\n\n\n# decision tree model\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-7_c857d96a55741db3d47e0cf85e254b23'}\n\n```{.r .cell-code}\ndecision_tree_model <- decision_tree(mode = \"regression\", tree_depth = 5, cost_complexity = 0.001, min_n = 7)\ndt_workflow_obj <- workflow(bike_recipe, decision_tree_model) %>%\nfit(data = train_tbl)\ndt_prediction <- predict(dt_workflow_obj,  new_data = test_tbl)\ndt_comparison <- dt_prediction %>%\nmutate(weight = test_tbl$weight) %>%\nmutate(correct_price = test_tbl$price)\n```\n:::\n\n\n#Random forest\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-8_48404399c53f5ad1f92fa6111188f1b0'}\n\n```{.r .cell-code}\nrf_model <- rand_forest(mode = \"regression\", mtry = 8, trees = 5000, min_n = 10)\nrf_workflow_obj <- workflow(bike_recipe, rf_model) %>% fit(data = train_tbl)  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: 8 columns were requested but there were 1 predictors in the data. 1\n#> will be used.\n```\n:::\n\n```{.r .cell-code}\nrf_prediction <- predict(rf_workflow_obj, new_data = test_tbl)\nrf_comparison <- rf_prediction %>%\nmutate(weight = test_tbl$weight) %>%\nmutate(correct_price = test_tbl$price)\n```\n:::\n\n\n#comparison\n\n::: {.cell hash='02_supervised_ml_cache/html/unnamed-chunk-9_2a1278519325bc6f43dc99092e33c22f'}\n\n```{.r .cell-code}\nlinear_comparison %>% yardstick::metrics(truth = correct_price, estimate = .pred)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1.617320e+03\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"6.479918e-03\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"1.330425e+03\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ndt_comparison %>% yardstick::metrics(truth = correct_price, estimate = .pred)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1316.184042\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"0.349141\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"1075.148481\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nrf_comparison %>% yardstick::metrics(truth = correct_price, estimate = .pred)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\".metric\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimator\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\".estimate\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"rmse\",\"2\":\"standard\",\"3\":\"1270.3894278\"},{\"1\":\"rsq\",\"2\":\"standard\",\"3\":\"0.3799888\"},{\"1\":\"mae\",\"2\":\"standard\",\"3\":\"1067.7135852\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}