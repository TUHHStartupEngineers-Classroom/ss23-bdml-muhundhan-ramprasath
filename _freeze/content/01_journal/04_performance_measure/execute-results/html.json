{
  "hash": "a68f0dd9c07350d2e985ed65eaba0f65",
  "result": {
    "markdown": "---\ntitle: \"Performance Measure\"\nauthor: \"Ramprasath Muhundhan\"\n---\n\n\n#load Libraries\n\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-1_778e68531b713d579ed01da18831f30e'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(h2o)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> ----------------------------------------------------------------------\n#> \n#> Your next step is to start H2O:\n#>     > h2o.init()\n#> \n#> For H2O package documentation, ask for help:\n#>     > ??h2o\n#> \n#> After starting H2O, you can use the Web UI at http://localhost:54321\n#> For more information visit https://docs.h2o.ai\n#> \n#> ----------------------------------------------------------------------\n#> \n#> \n#> Attaching package: 'h2o'\n#> \n#> The following objects are masked from 'package:lubridate':\n#> \n#>     day, hour, month, week, year\n#> \n#> The following objects are masked from 'package:stats':\n#> \n#>     cor, sd, var\n#> \n#> The following objects are masked from 'package:base':\n#> \n#>     %*%, %in%, &&, ||, apply, as.factor, as.numeric, colnames,\n#>     colnames<-, ifelse, is.character, is.factor, is.numeric, log,\n#>     log10, log1p, log2, round, signif, trunc\n```\n:::\n\n```{.r .cell-code}\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'recipes'\n#> \n#> The following object is masked from 'package:stringr':\n#> \n#>     fixed\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     step\n```\n:::\n\n```{.r .cell-code}\nlibrary(rsample)\n```\n:::\n\n\n#import data\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-2_dade34c6174e6139a08c3f228569f38d'}\n\n```{.r .cell-code}\nproduct_backorders_tbl <- read_csv(\"C:/Users/rampr/OneDrive/Documents/GitHub/ss23-bdml-muhundhan-ramprasath/product_backorders.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 19053 Columns: 23\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (7): potential_issue, deck_risk, oe_constraint, ppap_risk, stop_auto_bu...\n#> dbl (16): sku, national_inv, lead_time, in_transit_qty, forecast_3_month, fo...\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nset.seed(seed = 1113)\nsplit_obj <- rsample::initial_split(product_backorders_tbl, prop = 0.85)\ntrain_tbl <- training(split_obj)\ntest_tbl  <- testing(split_obj)\n```\n:::\n\n\n\n#create recipe and bake\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-3_87595d64463c9cac5ee1baf169761e37'}\n\n```{.r .cell-code}\nh2o.init()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  Connection successful!\n#> \n#> R is connected to the H2O cluster: \n#>     H2O cluster uptime:         2 minutes 24 seconds \n#>     H2O cluster timezone:       Europe/Berlin \n#>     H2O data parsing timezone:  UTC \n#>     H2O cluster version:        3.40.0.4 \n#>     H2O cluster version age:    2 months \n#>     H2O cluster name:           H2O_started_from_R_rampr_ewp216 \n#>     H2O cluster total nodes:    1 \n#>     H2O cluster total memory:   1.86 GB \n#>     H2O cluster total cores:    8 \n#>     H2O cluster allowed cores:  8 \n#>     H2O cluster healthy:        TRUE \n#>     H2O Connection ip:          localhost \n#>     H2O Connection port:        54321 \n#>     H2O Connection proxy:       NA \n#>     H2O Internal Security:      FALSE \n#>     R Version:                  R version 4.2.3 (2023-03-15 ucrt)\n```\n:::\n\n```{.r .cell-code}\nrecipe_obj <- recipe(went_on_backorder ~., data = train_tbl) %>% \n  prep()\n\ntrain_tbl <- bake(recipe_obj, new_data = train_tbl)\ntest_tbl  <- bake(recipe_obj, new_data = test_tbl)\n```\n:::\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-4_cec19ad458f5e1fd8122e56045a5f08f'}\n\n```{.r .cell-code}\nsplit_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 1234)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n\n```{.r .cell-code}\ntrain_h2o <- split_h2o[[1]]\nvalid_h2o <- split_h2o[[2]]\ntest_h2o  <- as.h2o(test_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n:::\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-5_bb33f929e424d7361c081e193982af5c'}\n\n```{.r .cell-code}\ny <- \"went_on_backorder\"\nx <- setdiff(names(train_h2o), y)\nautoml_models_h2o <- h2o.automl(\n  x = x,\n  y = y,\n  training_frame    = train_h2o,\n  validation_frame  = valid_h2o,\n  leaderboard_frame = test_h2o,\n  max_runtime_secs  = 30,\n  nfolds            = 5 \n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   4%\n#> 11:45:50.647: User specified a validation frame with cross-validation still enabled. Please note that the models will still be validated using cross-validation only, the validation frame will be used to provide purely informative validation metrics on the trained models.\n#> 11:45:50.653: AutoML: XGBoost is not available; skipping it.\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |=================                                                     |  24%\n  |                                                                            \n  |======================                                                |  32%\n  |                                                                            \n  |=============================                                         |  42%\n  |                                                                            \n  |==================================                                    |  49%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |=============================================                         |  64%\n  |                                                                            \n  |==================================================                    |  71%\n  |                                                                            \n  |=======================================================               |  78%\n  |                                                                            \n  |=============================================================         |  88%\n  |                                                                            \n  |==================================================================    |  95%\n  |                                                                            \n  |======================================================================| 100%\n```\n:::\n:::\n\n\n#Visulalization\n\n\n::: {.cell hash='04_performance_measure_cache/html/unnamed-chunk-6_f3c0fb0e777b7e3e4e2a7a081bd6591c'}\n\n```{.r .cell-code}\nleaderboard <- automl_models_h2o@leaderboard %>%\nas_tibble() %>%\nselect(-c(mean_per_class_error, rmse, mse))\n\ndata_transformed_tbl <- automl_models_h2o@leaderboard %>%\n  as_tibble() %>%\n  select(-c(aucpr, mean_per_class_error, rmse, mse)) %>% \n  mutate(model_type = str_extract(model_id, \"[^_]+\")) %>%\n  slice(1:15) %>% \n  rownames_to_column(var = \"rowname\") %>%\n  mutate(\n    model_id   = as_factor(model_id) %>% reorder(auc),\n    model_type = as.factor(model_type)\n  ) %>% \n  pivot_longer(cols = -c(model_id, model_type, rowname), \n               names_to = \"key\", \n               values_to = \"value\", \n               names_transform = list(key = forcats::fct_inorder)\n  ) %>% \n  mutate(model_id = paste0(rowname, \". \", model_id) %>% as_factor() %>% fct_rev())\n  \n  \n  model1 <- automl_models_h2o@leaderboard[1, \"model_id\"] %>%\n  h2o.getModel()\n  \n  model2 <- automl_models_h2o@leaderboard[5, \"model_id\"] %>%\n  h2o.getModel()\n\n  model3 <- automl_models_h2o@leaderboard[6, \"model_id\"] %>%\n  h2o.getModel()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}